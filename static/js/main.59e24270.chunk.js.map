{"version":3,"sources":["components/Photocard.js","components/Photos.js","components/Auth.js","App.js","serviceWorker.js","index.js"],"names":["Photocard","state","comments","isOpen","sendQuery","descriptionChange","commentChange","handleClick","photoId","_this","props","VK","Api","call","photo_id","v","r","response","setState","items","handleChange","e","id","currentTarget","Object","defineProperty","value","handleSendDescription","caption","console","log","handleSendComment","message","commentsElements","this","map","comment","react_default","a","createElement","key","style","listStyleType","margin","from_id","text","_this$props","photo","photoText","_this$state","Fragment","className","src","sizes","length","url","alt","onClick","onChange","placeholder","trim","React","Component","Photos","photos","count","no_service_albums","photos_sizes","photosElements","components_Photocard","Auth","username","handleLoginClick","login","authInfo","handleLogout","logout","session","user","first_name","components_Photos","App","components_Auth","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59e24270.chunk.js","sourcesContent":["import React from 'react'\n\nclass Photocard extends React.Component {\n    state = {\n        comments: [],\n        isOpen: false,\n        sendQuery: 0,\n        descriptionChange: '',\n        commentChange: '',\n    };\n\n    handleClick = () => {\n        const { photoId } = this.props;\n        if(this.state.sendQuery === 0) {\n            //eslint-disable-next-line no-undef\n            VK.Api.call('photos.getComments', {photo_id: photoId, v: \"5.87\"}, (r) => {\n                if (r.response) {\n                    this.setState((state) => ({\n                        comments: r.response.items,\n                        isOpen: !state.isOpen,\n                        sendQuery: 1,\n                    }))\n                }\n            });\n        } else {\n            this.setState((state) => ({\n                isOpen: !state.isOpen,\n            }))\n        }\n    };\n\n    handleChange = (e) => {\n        const { id } = e.currentTarget;\n        this.setState({\n            [id]: e.currentTarget.value\n        })\n    };\n\n    handleSendDescription = () => {\n        const { photoId } = this.props;\n        //eslint-disable-next-line no-undef\n        VK.Api.call('photos.edit', {photo_id: photoId, caption: this.state.descriptionChange, v: \"5.87\"}, (r) => {\n            if (!r.response) {\n                console.log('error')\n            }\n        });\n    };\n    handleSendComment = () => {\n        const { photoId } = this.props;\n        //eslint-disable-next-line no-undef\n        VK.Api.call('photos.createComment', {photo_id: photoId, message: this.state.commentChange, v: \"5.87\"}, (r) => {\n            if(!r.response) {\n                console.log('error')\n            }\n        });\n    }\n\n    render(){\n        const commentsElements = this.state.comments.map((comment) =>\n            <li key={comment.id} style={{listStyleType: \"none\", margin: \"0px\"}}>\n                <p style={{margin: \"0px\"}}>Author id{comment.from_id}</p>\n                {comment.text}\n            </li>\n        );\n        const { photo, photoText } = this.props;\n        const { descriptionChange, isOpen, comments, commentChange } = this.state;\n        return(\n            <React.Fragment>\n                <div className=\"card\" >\n                    <img\n                        className=\"card-img-top\"\n                        src={photo.sizes[photo.sizes.length-1].url}\n                        alt={photo.text}\n                        onClick={this.handleClick}>\n                    </img>\n                    {\n                        isOpen &&\n                            <div>\n                                <div className=\"card-header\">\n                                                <textarea\n                                                    id=\"descriptionChange\"\n                                                    className=\"card-text\"\n                                                    value={descriptionChange}\n                                                    onChange={this.handleChange}\n                                                    placeholder={photoText.trim() ? photoText : \"Описания нет\"}>\n                                                </textarea>\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        onClick={this.handleSendDescription}\n                                    >\n                                        Отправить\n                                    </button>\n                                </div>\n                                <div className=\"card-body\">\n                                        <React.Fragment>\n                                            <p className=\"card-text\">Комментарии</p>\n                                            { comments.length > 0 && <ul>{commentsElements}</ul> }\n                                            <textarea\n                                                id=\"commentChange\"\n                                                onChange={this.handleChange}\n                                                placeholder=\"Введите комментарий\"\n                                                value={commentChange}>\n                                            </textarea>\n                                        </React.Fragment>\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        onClick={this.handleSendComment}>\n                                        Отправить\n                                    </button>\n                                </div>\n                            </div>\n                    }\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Photocard","import React, { Component } from 'react';\nimport Photocard from \"./Photocard\";\n\nclass Photos extends Component {\n    state = {\n        photos: [],\n    };\n\n    handleClick = () => {\n        //eslint-disable-next-line no-undef\n        VK.Api.call('photos.getAll', { count: 200, no_service_albums: 0, photos_sizes: 0, v: \"5.87\"}, (r) => {\n            if(r.response) {\n                this.setState({\n                    photos: r.response.items\n                })\n            }\n        });\n\n    }\n\n    render() {\n        const photosElements = this.state.photos.map((photo) =>\n            <div key={photo.id} className=\"col-sm-3\">\n                <Photocard\n                    photo={ photo }\n                    photoId={ photo.id }\n                    photoText = { photo.text }\n                />\n            </div>\n        );\n        return(\n            <div>\n                <button className=\"btn btn-primary\"\n                        onClick={this.handleClick}>\n                    Загрузить фото\n                </button>\n                <div className=\"container\" >\n                    <div className=\"row\">\n                        { this.state.photos.length > 0 && photosElements }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Photos","import React, { Component } from 'react';\nimport Photos from \"./Photos\";\n\nclass Auth extends Component {\n    state = {\n        id: null,\n        username: '',\n    };\n\n    handleLoginClick = () => {\n        //eslint-disable-next-line no-undef\n        VK.Auth.login(this.authInfo,4)\n    };\n\n    handleLogout = () => {\n        //eslint-disable-next-line no-undef\n        VK.Auth.logout();\n        this.setState({\n            id: null,\n            username: '',\n        })\n    };\n\n    authInfo = (response) => {\n        if (response.session) {\n            this.setState({\n                username: response.session.user.first_name,\n                id: response.session.user.id,\n            })\n        } else {\n            console.log('not auth');\n        }\n    }\n\n    render() {\n        const { username, id } = this.state;\n        return (\n            <React.Fragment>\n                {username.trim() ? <p>Добро пожаловать, {username}</p> : <p>Авторизуйтесь</p>}\n                {\n                    id && <button\n                            className=\"btn btn-primary float-right\"\n                            onClick={this.handleLogout}>выйти\n                          </button>\n                }\n                {\n                    username.trim() ? <Photos /> : <button\n                                                    className=\"btn btn-primary\"\n                                                    onClick={this.handleLoginClick}>Войти\n                                                    </button>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Auth","import React, { Component } from 'react';\nimport Auth from \"./components/Auth\";\nimport 'bootstrap/dist/css/bootstrap.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Auth/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}